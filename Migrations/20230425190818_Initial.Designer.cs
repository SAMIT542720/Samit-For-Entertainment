// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Samit_For_Entertainment.Data;

#nullable disable

namespace Samit_For_Entertainment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230425190818_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Samit_For_Entertainment.Models.ACTOR", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ACTORS");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.ACTOR_MOVIE", b =>
                {
                    b.Property<int>("ACTORID")
                        .HasColumnType("int");

                    b.Property<int>("MOVIEID")
                        .HasColumnType("int");

                    b.HasKey("ACTORID", "MOVIEID");

                    b.HasIndex("MOVIEID");

                    b.ToTable("ACTORS_MOVIES");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.CINAMA", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("CINAMAS");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.MOVIE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CINAMAID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRODUCERID")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CINAMAID");

                    b.HasIndex("PRODUCERID");

                    b.ToTable("MOVIES");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.PRODUCER", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PRODUCERS");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.ACTOR_MOVIE", b =>
                {
                    b.HasOne("Samit_For_Entertainment.Models.ACTOR", "ACTOR")
                        .WithMany("ACTORS_MOVIES")
                        .HasForeignKey("ACTORID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Samit_For_Entertainment.Models.MOVIE", "MOVIE")
                        .WithMany("ACTORS_MOVIES")
                        .HasForeignKey("MOVIEID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ACTOR");

                    b.Navigation("MOVIE");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.MOVIE", b =>
                {
                    b.HasOne("Samit_For_Entertainment.Models.CINAMA", "CINAMA")
                        .WithMany("MOVIES")
                        .HasForeignKey("CINAMAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Samit_For_Entertainment.Models.PRODUCER", "PRODUCER")
                        .WithMany("MOVIES")
                        .HasForeignKey("PRODUCERID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CINAMA");

                    b.Navigation("PRODUCER");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.ACTOR", b =>
                {
                    b.Navigation("ACTORS_MOVIES");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.CINAMA", b =>
                {
                    b.Navigation("MOVIES");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.MOVIE", b =>
                {
                    b.Navigation("ACTORS_MOVIES");
                });

            modelBuilder.Entity("Samit_For_Entertainment.Models.PRODUCER", b =>
                {
                    b.Navigation("MOVIES");
                });
#pragma warning restore 612, 618
        }
    }
}
